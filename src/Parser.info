-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Parser.y
-----------------------------------------------------------------------------


terminal defn is unused
terminal let is unused
terminal in is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_program -> Program                          (0)
	Program -> ClassDecls GlobalVarDecls Rules Assertions   (1)
	ClassDecls ->                                      (2)
	ClassDecls -> ClassDecls ClassDecl                 (3)
	ClassDecl -> class VAR Annot ClassDef              (4)
	ClassDef -> '{' FieldDecls '}'                     (5)
	ClassDef -> extends VAR '{' FieldDecls '}'         (6)
	FieldDecls ->                                      (7)
	FieldDecls -> FieldDecls FieldDecl                 (8)
	FieldDecl -> VAR Annot ':' Tp                      (9)
	GlobalVarDecls ->                                  (10)
	GlobalVarDecls -> GlobalVarDecls GlobalVarDecl     (11)
	GlobalVarDecl -> decl VAR ':' Tp                   (12)
	VarDeclsCommaSep -> VarDecl                        (13)
	VarDeclsCommaSep -> VarDeclsCommaSep ',' VarDecl   (14)
	VarDecl -> VAR ':' Tp                              (15)
	Assertions ->                                      (16)
	Assertions -> Assertions Assertion                 (17)
	Assertion -> assert Expr                           (18)
	ATp -> Bool                                        (19)
	ATp -> Int                                         (20)
	ATp -> VAR                                         (21)
	ATp -> '(' TpsCommaSep ')'                         (22)
	TpsCommaSep ->                                     (23)
	TpsCommaSep -> Tp                                  (24)
	TpsCommaSep -> TpsCommaSep ',' Tp                  (25)
	Tp -> ATp                                          (26)
	Tp -> Tp '->' Tp                                   (27)
	Pattern -> VAR                                     (28)
	Pattern -> '(' VarsCommaSep ')'                    (29)
	VarsCommaSep ->                                    (30)
	VarsCommaSep -> VAR                                (31)
	VarsCommaSep -> VarsCommaSep ',' VAR               (32)
	Expr -> '\\' Pattern ':' ATp '->' Expr             (33)
	Expr -> all VAR ':' Tp '.' Expr                    (34)
	Expr -> ex VAR ':' Tp '.' Expr                     (35)
	Expr -> Expr '-->' Expr                            (36)
	Expr -> Expr '||' Expr                             (37)
	Expr -> Expr '&&' Expr                             (38)
	Expr -> if Expr then Expr else Expr                (39)
	Expr -> not Expr                                   (40)
	Expr -> Expr '<' Expr                              (41)
	Expr -> Expr '>' Expr                              (42)
	Expr -> Expr '=' Expr                              (43)
	Expr -> Expr '+' Expr                              (44)
	Expr -> Expr '-' Expr                              (45)
	Expr -> '-' Expr                                   (46)
	Expr -> Expr '*' Expr                              (47)
	Expr -> Expr '/' Expr                              (48)
	Expr -> Expr '%' Expr                              (49)
	Expr -> App                                        (50)
	App -> App Acc                                     (51)
	App -> Acc                                         (52)
	Acc -> Acc '.' VAR                                 (53)
	Acc -> Atom                                        (54)
	Atom -> '(' ExprsCommaSep ')'                      (55)
	Atom -> NUM                                        (56)
	Atom -> VAR                                        (57)
	Atom -> true                                       (58)
	Atom -> false                                      (59)
	ExprsCommaSep ->                                   (60)
	ExprsCommaSep -> Expr                              (61)
	ExprsCommaSep -> ExprsCommaSep ',' Expr            (62)
	Rules ->                                           (63)
	Rules -> Rules Rule                                (64)
	Rule -> RuleName RuleVarDecls RulePrecond RuleConcl   (65)
	RuleName -> rule '<' VAR '>'                       (66)
	RuleVarDecls ->                                    (67)
	RuleVarDecls -> for VarDeclsCommaSep               (68)
	RulePrecond -> if Expr                             (69)
	RuleConcl -> then Expr                             (70)
	Annot -> '(' NUM ')'                               (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	assert         { TokenAssert }
	class          { TokenClass }
	decl           { TokenDecl }
	defn           { TokenDefn }
	extends        { TokenExtends }
	rule           { TokenRule }
	Bool           { TokenBool }
	Int            { TokenInt }
	let            { TokenLet }
	in             { TokenIn }
	not            { TokenNot }
	all            { TokenAll }
	ex             { TokenEx }
	if             { TokenIf }
	then           { TokenThen }
	else           { TokenElse }
	for            { TokenFor }
	true           { TokenTrue }
	false          { TokenFalse }
	'\\'           { TokenLambda }
	'->'           { TokenArrow }
	'-->'          { TokenImpl }
	'||'           { TokenOr }
	'&&'           { TokenAnd }
	'='            { TokenEq }
	'<'            { TokenLt }
	'>'            { TokenGt }
	'+'            { TokenAdd }
	'-'            { TokenSub }
	'*'            { TokenMul }
	'/'            { TokenDiv }
	'%'            { TokenMod }
	'.'            { TokenDot }
	','            { TokenComma }
	':'            { TokenColon }
	'('            { TokenLParen }
	')'            { TokenRParen }
	'{'            { TokenLBrace }
	'}'            { TokenRBrace }
	NUM            { TokenNum $$ }
	VAR            { TokenSym $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_program  rule  0
	Program         rule  1
	ClassDecls      rules 2, 3
	ClassDecl       rule  4
	ClassDef        rules 5, 6
	FieldDecls      rules 7, 8
	FieldDecl       rule  9
	GlobalVarDecls  rules 10, 11
	GlobalVarDecl   rule  12
	VarDeclsCommaSep rules 13, 14
	VarDecl         rule  15
	Assertions      rules 16, 17
	Assertion       rule  18
	ATp             rules 19, 20, 21, 22
	TpsCommaSep     rules 23, 24, 25
	Tp              rules 26, 27
	Pattern         rules 28, 29
	VarsCommaSep    rules 30, 31, 32
	Expr            rules 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50
	App             rules 51, 52
	Acc             rules 53, 54
	Atom            rules 55, 56, 57, 58, 59
	ExprsCommaSep   rules 60, 61, 62
	Rules           rules 63, 64
	Rule            rule  65
	RuleName        rule  66
	RuleVarDecls    rules 67, 68
	RulePrecond     rule  69
	RuleConcl       rule  70
	Annot           rule  71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	assert         reduce using rule 2
	class          reduce using rule 2
	decl           reduce using rule 2
	rule           reduce using rule 2
	%eof           reduce using rule 2

	Program        goto state 3
	ClassDecls     goto state 2

State 1



	ClassDecls     goto state 2

State 2

	Program -> ClassDecls . GlobalVarDecls Rules Assertions    (rule 1)
	ClassDecls -> ClassDecls . ClassDecl                (rule 3)

	assert         reduce using rule 10
	class          shift, and enter state 6
	decl           reduce using rule 10
	rule           reduce using rule 10
	%eof           reduce using rule 10

	ClassDecl      goto state 4
	GlobalVarDecls goto state 5

State 3

	%start_program -> Program .                         (rule 0)

	%eof           accept


State 4

	ClassDecls -> ClassDecls ClassDecl .                (rule 3)

	assert         reduce using rule 3
	class          reduce using rule 3
	decl           reduce using rule 3
	rule           reduce using rule 3
	%eof           reduce using rule 3


State 5

	Program -> ClassDecls GlobalVarDecls . Rules Assertions    (rule 1)
	GlobalVarDecls -> GlobalVarDecls . GlobalVarDecl    (rule 11)

	assert         reduce using rule 63
	decl           shift, and enter state 10
	rule           reduce using rule 63
	%eof           reduce using rule 63

	GlobalVarDecl  goto state 8
	Rules          goto state 9

State 6

	ClassDecl -> class . VAR Annot ClassDef             (rule 4)

	VAR            shift, and enter state 7


State 7

	ClassDecl -> class VAR . Annot ClassDef             (rule 4)

	'('            shift, and enter state 17

	Annot          goto state 16

State 8

	GlobalVarDecls -> GlobalVarDecls GlobalVarDecl .    (rule 11)

	assert         reduce using rule 11
	decl           reduce using rule 11
	rule           reduce using rule 11
	%eof           reduce using rule 11


State 9

	Program -> ClassDecls GlobalVarDecls Rules . Assertions    (rule 1)
	Rules -> Rules . Rule                               (rule 64)

	assert         reduce using rule 16
	rule           shift, and enter state 15
	%eof           reduce using rule 16

	Assertions     goto state 12
	Rule           goto state 13
	RuleName       goto state 14

State 10

	GlobalVarDecl -> decl . VAR ':' Tp                  (rule 12)

	VAR            shift, and enter state 11


State 11

	GlobalVarDecl -> decl VAR . ':' Tp                  (rule 12)

	':'            shift, and enter state 27


State 12

	Program -> ClassDecls GlobalVarDecls Rules Assertions .    (rule 1)
	Assertions -> Assertions . Assertion                (rule 17)

	assert         shift, and enter state 26
	%eof           reduce using rule 1

	Assertion      goto state 25

State 13

	Rules -> Rules Rule .                               (rule 64)

	assert         reduce using rule 64
	rule           reduce using rule 64
	%eof           reduce using rule 64


State 14

	Rule -> RuleName . RuleVarDecls RulePrecond RuleConcl    (rule 65)

	if             reduce using rule 67
	for            shift, and enter state 24

	RuleVarDecls   goto state 23

State 15

	RuleName -> rule . '<' VAR '>'                      (rule 66)

	'<'            shift, and enter state 22


State 16

	ClassDecl -> class VAR Annot . ClassDef             (rule 4)

	extends        shift, and enter state 20
	'{'            shift, and enter state 21

	ClassDef       goto state 19

State 17

	Annot -> '(' . NUM ')'                              (rule 71)

	NUM            shift, and enter state 18


State 18

	Annot -> '(' NUM . ')'                              (rule 71)

	')'            shift, and enter state 57


State 19

	ClassDecl -> class VAR Annot ClassDef .             (rule 4)

	assert         reduce using rule 4
	class          reduce using rule 4
	decl           reduce using rule 4
	rule           reduce using rule 4
	%eof           reduce using rule 4


State 20

	ClassDef -> extends . VAR '{' FieldDecls '}'        (rule 6)

	VAR            shift, and enter state 56


State 21

	ClassDef -> '{' . FieldDecls '}'                    (rule 5)

	'}'            reduce using rule 7
	VAR            reduce using rule 7

	FieldDecls     goto state 55

State 22

	RuleName -> rule '<' . VAR '>'                      (rule 66)

	VAR            shift, and enter state 54


State 23

	Rule -> RuleName RuleVarDecls . RulePrecond RuleConcl    (rule 65)

	if             shift, and enter state 53

	RulePrecond    goto state 52

State 24

	RuleVarDecls -> for . VarDeclsCommaSep              (rule 68)

	VAR            shift, and enter state 51

	VarDeclsCommaSepgoto state 49
	VarDecl        goto state 50

State 25

	Assertions -> Assertions Assertion .                (rule 17)

	assert         reduce using rule 17
	%eof           reduce using rule 17


State 26

	Assertion -> assert . Expr                          (rule 18)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 34
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 27

	GlobalVarDecl -> decl VAR ':' . Tp                  (rule 12)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 29

State 28

	Tp -> ATp .                                         (rule 26)

	assert         reduce using rule 26
	decl           reduce using rule 26
	rule           reduce using rule 26
	if             reduce using rule 26
	'->'           reduce using rule 26
	'.'            reduce using rule 26
	','            reduce using rule 26
	')'            reduce using rule 26
	'}'            reduce using rule 26
	VAR            reduce using rule 26
	%eof           reduce using rule 26


State 29

	GlobalVarDecl -> decl VAR ':' Tp .                  (rule 12)
	Tp -> Tp . '->' Tp                                  (rule 27)

	assert         reduce using rule 12
	decl           reduce using rule 12
	rule           reduce using rule 12
	'->'           shift, and enter state 93
	%eof           reduce using rule 12


State 30

	ATp -> Bool .                                       (rule 19)

	assert         reduce using rule 19
	decl           reduce using rule 19
	rule           reduce using rule 19
	if             reduce using rule 19
	'->'           reduce using rule 19
	'.'            reduce using rule 19
	','            reduce using rule 19
	')'            reduce using rule 19
	'}'            reduce using rule 19
	VAR            reduce using rule 19
	%eof           reduce using rule 19


State 31

	ATp -> Int .                                        (rule 20)

	assert         reduce using rule 20
	decl           reduce using rule 20
	rule           reduce using rule 20
	if             reduce using rule 20
	'->'           reduce using rule 20
	'.'            reduce using rule 20
	','            reduce using rule 20
	')'            reduce using rule 20
	'}'            reduce using rule 20
	VAR            reduce using rule 20
	%eof           reduce using rule 20


State 32

	ATp -> '(' . TpsCommaSep ')'                        (rule 22)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	','            reduce using rule 23
	'('            shift, and enter state 32
	')'            reduce using rule 23
	VAR            shift, and enter state 33

	ATp            goto state 28
	TpsCommaSep    goto state 91
	Tp             goto state 92

State 33

	ATp -> VAR .                                        (rule 21)

	assert         reduce using rule 21
	decl           reduce using rule 21
	rule           reduce using rule 21
	if             reduce using rule 21
	'->'           reduce using rule 21
	'.'            reduce using rule 21
	','            reduce using rule 21
	')'            reduce using rule 21
	'}'            reduce using rule 21
	VAR            reduce using rule 21
	%eof           reduce using rule 21


State 34

	Assertion -> assert Expr .                          (rule 18)
	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 18
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	%eof           reduce using rule 18


State 35

	Expr -> App .                                       (rule 50)
	App -> App . Acc                                    (rule 51)

	assert         reduce using rule 50
	rule           reduce using rule 50
	then           reduce using rule 50
	else           reduce using rule 50
	true           shift, and enter state 42
	false          shift, and enter state 43
	'-->'          reduce using rule 50
	'||'           reduce using rule 50
	'&&'           reduce using rule 50
	'='            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'+'            reduce using rule 50
	'-'            reduce using rule 50
	'*'            reduce using rule 50
	'/'            reduce using rule 50
	'%'            reduce using rule 50
	','            reduce using rule 50
	'('            shift, and enter state 46
	')'            reduce using rule 50
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48
	%eof           reduce using rule 50

	Acc            goto state 79
	Atom           goto state 37

State 36

	App -> Acc .                                        (rule 52)
	Acc -> Acc . '.' VAR                                (rule 53)

	assert         reduce using rule 52
	rule           reduce using rule 52
	then           reduce using rule 52
	else           reduce using rule 52
	true           reduce using rule 52
	false          reduce using rule 52
	'-->'          reduce using rule 52
	'||'           reduce using rule 52
	'&&'           reduce using rule 52
	'='            reduce using rule 52
	'<'            reduce using rule 52
	'>'            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'*'            reduce using rule 52
	'/'            reduce using rule 52
	'%'            reduce using rule 52
	'.'            shift, and enter state 78
	','            reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	NUM            reduce using rule 52
	VAR            reduce using rule 52
	%eof           reduce using rule 52


State 37

	Acc -> Atom .                                       (rule 54)

	assert         reduce using rule 54
	rule           reduce using rule 54
	then           reduce using rule 54
	else           reduce using rule 54
	true           reduce using rule 54
	false          reduce using rule 54
	'-->'          reduce using rule 54
	'||'           reduce using rule 54
	'&&'           reduce using rule 54
	'='            reduce using rule 54
	'<'            reduce using rule 54
	'>'            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'*'            reduce using rule 54
	'/'            reduce using rule 54
	'%'            reduce using rule 54
	'.'            reduce using rule 54
	','            reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	NUM            reduce using rule 54
	VAR            reduce using rule 54
	%eof           reduce using rule 54


State 38

	Expr -> not . Expr                                  (rule 40)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 77
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 39

	Expr -> all . VAR ':' Tp '.' Expr                   (rule 34)

	VAR            shift, and enter state 76


State 40

	Expr -> ex . VAR ':' Tp '.' Expr                    (rule 35)

	VAR            shift, and enter state 75


State 41

	Expr -> if . Expr then Expr else Expr               (rule 39)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 74
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 42

	Atom -> true .                                      (rule 58)

	assert         reduce using rule 58
	rule           reduce using rule 58
	then           reduce using rule 58
	else           reduce using rule 58
	true           reduce using rule 58
	false          reduce using rule 58
	'-->'          reduce using rule 58
	'||'           reduce using rule 58
	'&&'           reduce using rule 58
	'='            reduce using rule 58
	'<'            reduce using rule 58
	'>'            reduce using rule 58
	'+'            reduce using rule 58
	'-'            reduce using rule 58
	'*'            reduce using rule 58
	'/'            reduce using rule 58
	'%'            reduce using rule 58
	'.'            reduce using rule 58
	','            reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	NUM            reduce using rule 58
	VAR            reduce using rule 58
	%eof           reduce using rule 58


State 43

	Atom -> false .                                     (rule 59)

	assert         reduce using rule 59
	rule           reduce using rule 59
	then           reduce using rule 59
	else           reduce using rule 59
	true           reduce using rule 59
	false          reduce using rule 59
	'-->'          reduce using rule 59
	'||'           reduce using rule 59
	'&&'           reduce using rule 59
	'='            reduce using rule 59
	'<'            reduce using rule 59
	'>'            reduce using rule 59
	'+'            reduce using rule 59
	'-'            reduce using rule 59
	'*'            reduce using rule 59
	'/'            reduce using rule 59
	'%'            reduce using rule 59
	'.'            reduce using rule 59
	','            reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	NUM            reduce using rule 59
	VAR            reduce using rule 59
	%eof           reduce using rule 59


State 44

	Expr -> '\\' . Pattern ':' ATp '->' Expr            (rule 33)

	'('            shift, and enter state 72
	VAR            shift, and enter state 73

	Pattern        goto state 71

State 45

	Expr -> '-' . Expr                                  (rule 46)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 70
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 46

	Atom -> '(' . ExprsCommaSep ')'                     (rule 55)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	','            reduce using rule 60
	'('            shift, and enter state 46
	')'            reduce using rule 60
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 68
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37
	ExprsCommaSep  goto state 69

State 47

	Atom -> NUM .                                       (rule 56)

	assert         reduce using rule 56
	rule           reduce using rule 56
	then           reduce using rule 56
	else           reduce using rule 56
	true           reduce using rule 56
	false          reduce using rule 56
	'-->'          reduce using rule 56
	'||'           reduce using rule 56
	'&&'           reduce using rule 56
	'='            reduce using rule 56
	'<'            reduce using rule 56
	'>'            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'*'            reduce using rule 56
	'/'            reduce using rule 56
	'%'            reduce using rule 56
	'.'            reduce using rule 56
	','            reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	NUM            reduce using rule 56
	VAR            reduce using rule 56
	%eof           reduce using rule 56


State 48

	Atom -> VAR .                                       (rule 57)

	assert         reduce using rule 57
	rule           reduce using rule 57
	then           reduce using rule 57
	else           reduce using rule 57
	true           reduce using rule 57
	false          reduce using rule 57
	'-->'          reduce using rule 57
	'||'           reduce using rule 57
	'&&'           reduce using rule 57
	'='            reduce using rule 57
	'<'            reduce using rule 57
	'>'            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'*'            reduce using rule 57
	'/'            reduce using rule 57
	'%'            reduce using rule 57
	'.'            reduce using rule 57
	','            reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	NUM            reduce using rule 57
	VAR            reduce using rule 57
	%eof           reduce using rule 57


State 49

	VarDeclsCommaSep -> VarDeclsCommaSep . ',' VarDecl    (rule 14)
	RuleVarDecls -> for VarDeclsCommaSep .              (rule 68)

	if             reduce using rule 68
	','            shift, and enter state 67


State 50

	VarDeclsCommaSep -> VarDecl .                       (rule 13)

	if             reduce using rule 13
	','            reduce using rule 13


State 51

	VarDecl -> VAR . ':' Tp                             (rule 15)

	':'            shift, and enter state 66


State 52

	Rule -> RuleName RuleVarDecls RulePrecond . RuleConcl    (rule 65)

	then           shift, and enter state 65

	RuleConcl      goto state 64

State 53

	RulePrecond -> if . Expr                            (rule 69)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 63
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 54

	RuleName -> rule '<' VAR . '>'                      (rule 66)

	'>'            shift, and enter state 62


State 55

	ClassDef -> '{' FieldDecls . '}'                    (rule 5)
	FieldDecls -> FieldDecls . FieldDecl                (rule 8)

	'}'            shift, and enter state 60
	VAR            shift, and enter state 61

	FieldDecl      goto state 59

State 56

	ClassDef -> extends VAR . '{' FieldDecls '}'        (rule 6)

	'{'            shift, and enter state 58


State 57

	Annot -> '(' NUM ')' .                              (rule 71)

	extends        reduce using rule 71
	':'            reduce using rule 71
	'{'            reduce using rule 71


State 58

	ClassDef -> extends VAR '{' . FieldDecls '}'        (rule 6)

	'}'            reduce using rule 7
	VAR            reduce using rule 7

	FieldDecls     goto state 121

State 59

	FieldDecls -> FieldDecls FieldDecl .                (rule 8)

	'}'            reduce using rule 8
	VAR            reduce using rule 8


State 60

	ClassDef -> '{' FieldDecls '}' .                    (rule 5)

	assert         reduce using rule 5
	class          reduce using rule 5
	decl           reduce using rule 5
	rule           reduce using rule 5
	%eof           reduce using rule 5


State 61

	FieldDecl -> VAR . Annot ':' Tp                     (rule 9)

	'('            shift, and enter state 17

	Annot          goto state 120

State 62

	RuleName -> rule '<' VAR '>' .                      (rule 66)

	if             reduce using rule 66
	for            reduce using rule 66


State 63

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)
	RulePrecond -> if Expr .                            (rule 69)

	then           reduce using rule 69
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90


State 64

	Rule -> RuleName RuleVarDecls RulePrecond RuleConcl .    (rule 65)

	assert         reduce using rule 65
	rule           reduce using rule 65
	%eof           reduce using rule 65


State 65

	RuleConcl -> then . Expr                            (rule 70)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 119
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 66

	VarDecl -> VAR ':' . Tp                             (rule 15)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 118

State 67

	VarDeclsCommaSep -> VarDeclsCommaSep ',' . VarDecl    (rule 14)

	VAR            shift, and enter state 51

	VarDecl        goto state 117

State 68

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)
	ExprsCommaSep -> Expr .                             (rule 61)

	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 61
	')'            reduce using rule 61


State 69

	Atom -> '(' ExprsCommaSep . ')'                     (rule 55)
	ExprsCommaSep -> ExprsCommaSep . ',' Expr           (rule 62)

	','            shift, and enter state 115
	')'            shift, and enter state 116


State 70

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> '-' Expr .                                  (rule 46)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 46
	rule           reduce using rule 46
	then           reduce using rule 46
	else           reduce using rule 46
	'-->'          reduce using rule 46
	'||'           reduce using rule 46
	'&&'           reduce using rule 46
	'='            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'+'            reduce using rule 46
	'-'            reduce using rule 46
	'*'            reduce using rule 46
	'/'            reduce using rule 46
	'%'            reduce using rule 46
	','            reduce using rule 46
	')'            reduce using rule 46
	%eof           reduce using rule 46


State 71

	Expr -> '\\' Pattern . ':' ATp '->' Expr            (rule 33)

	':'            shift, and enter state 114


State 72

	Pattern -> '(' . VarsCommaSep ')'                   (rule 29)

	','            reduce using rule 30
	')'            reduce using rule 30
	VAR            shift, and enter state 113

	VarsCommaSep   goto state 112

State 73

	Pattern -> VAR .                                    (rule 28)

	':'            reduce using rule 28


State 74

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> if Expr . then Expr else Expr               (rule 39)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	then           shift, and enter state 111
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90


State 75

	Expr -> ex VAR . ':' Tp '.' Expr                    (rule 35)

	':'            shift, and enter state 110


State 76

	Expr -> all VAR . ':' Tp '.' Expr                   (rule 34)

	':'            shift, and enter state 109


State 77

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> not Expr .                                  (rule 40)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 40
	rule           reduce using rule 40
	then           reduce using rule 40
	else           reduce using rule 40
	'-->'          reduce using rule 40
	'||'           reduce using rule 40
	'&&'           reduce using rule 40
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 40
	')'            reduce using rule 40
	%eof           reduce using rule 40


State 78

	Acc -> Acc '.' . VAR                                (rule 53)

	VAR            shift, and enter state 108


State 79

	App -> App Acc .                                    (rule 51)
	Acc -> Acc . '.' VAR                                (rule 53)

	assert         reduce using rule 51
	rule           reduce using rule 51
	then           reduce using rule 51
	else           reduce using rule 51
	true           reduce using rule 51
	false          reduce using rule 51
	'-->'          reduce using rule 51
	'||'           reduce using rule 51
	'&&'           reduce using rule 51
	'='            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'*'            reduce using rule 51
	'/'            reduce using rule 51
	'%'            reduce using rule 51
	'.'            shift, and enter state 78
	','            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	NUM            reduce using rule 51
	VAR            reduce using rule 51
	%eof           reduce using rule 51


State 80

	Expr -> Expr '-->' . Expr                           (rule 36)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 107
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 81

	Expr -> Expr '||' . Expr                            (rule 37)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 106
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 82

	Expr -> Expr '&&' . Expr                            (rule 38)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 105
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 83

	Expr -> Expr '=' . Expr                             (rule 43)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 104
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 84

	Expr -> Expr '<' . Expr                             (rule 41)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 103
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 85

	Expr -> Expr '>' . Expr                             (rule 42)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 102
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 86

	Expr -> Expr '+' . Expr                             (rule 44)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 101
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 87

	Expr -> Expr '-' . Expr                             (rule 45)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 100
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 88

	Expr -> Expr '*' . Expr                             (rule 47)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 99
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 89

	Expr -> Expr '/' . Expr                             (rule 48)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 98
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 90

	Expr -> Expr '%' . Expr                             (rule 49)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 97
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 91

	ATp -> '(' TpsCommaSep . ')'                        (rule 22)
	TpsCommaSep -> TpsCommaSep . ',' Tp                 (rule 25)

	','            shift, and enter state 95
	')'            shift, and enter state 96


State 92

	TpsCommaSep -> Tp .                                 (rule 24)
	Tp -> Tp . '->' Tp                                  (rule 27)

	'->'           shift, and enter state 93
	','            reduce using rule 24
	')'            reduce using rule 24


State 93

	Tp -> Tp '->' . Tp                                  (rule 27)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 94

State 94

	Tp -> Tp . '->' Tp                                  (rule 27)
	Tp -> Tp '->' Tp .                                  (rule 27)

	assert         reduce using rule 27
	decl           reduce using rule 27
	rule           reduce using rule 27
	if             reduce using rule 27
	'->'           shift, and enter state 93
	'.'            reduce using rule 27
	','            reduce using rule 27
	')'            reduce using rule 27
	'}'            reduce using rule 27
	VAR            reduce using rule 27
	%eof           reduce using rule 27


State 95

	TpsCommaSep -> TpsCommaSep ',' . Tp                 (rule 25)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 131

State 96

	ATp -> '(' TpsCommaSep ')' .                        (rule 22)

	assert         reduce using rule 22
	decl           reduce using rule 22
	rule           reduce using rule 22
	if             reduce using rule 22
	'->'           reduce using rule 22
	'.'            reduce using rule 22
	','            reduce using rule 22
	')'            reduce using rule 22
	'}'            reduce using rule 22
	VAR            reduce using rule 22
	%eof           reduce using rule 22


State 97

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)
	Expr -> Expr '%' Expr .                             (rule 49)

	assert         reduce using rule 49
	rule           reduce using rule 49
	then           reduce using rule 49
	else           reduce using rule 49
	'-->'          reduce using rule 49
	'||'           reduce using rule 49
	'&&'           reduce using rule 49
	'='            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'*'            reduce using rule 49
	'/'            reduce using rule 49
	'%'            reduce using rule 49
	','            reduce using rule 49
	')'            reduce using rule 49
	%eof           reduce using rule 49


State 98

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr '/' Expr .                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 48
	rule           reduce using rule 48
	then           reduce using rule 48
	else           reduce using rule 48
	'-->'          reduce using rule 48
	'||'           reduce using rule 48
	'&&'           reduce using rule 48
	'='            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'*'            reduce using rule 48
	'/'            reduce using rule 48
	'%'            reduce using rule 48
	','            reduce using rule 48
	')'            reduce using rule 48
	%eof           reduce using rule 48


State 99

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr '*' Expr .                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 47
	rule           reduce using rule 47
	then           reduce using rule 47
	else           reduce using rule 47
	'-->'          reduce using rule 47
	'||'           reduce using rule 47
	'&&'           reduce using rule 47
	'='            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'+'            reduce using rule 47
	'-'            reduce using rule 47
	'*'            reduce using rule 47
	'/'            reduce using rule 47
	'%'            reduce using rule 47
	','            reduce using rule 47
	')'            reduce using rule 47
	%eof           reduce using rule 47


State 100

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr '-' Expr .                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 45
	rule           reduce using rule 45
	then           reduce using rule 45
	else           reduce using rule 45
	'-->'          reduce using rule 45
	'||'           reduce using rule 45
	'&&'           reduce using rule 45
	'='            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'+'            reduce using rule 45
	'-'            reduce using rule 45
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 45
	')'            reduce using rule 45
	%eof           reduce using rule 45


State 101

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr '+' Expr .                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 44
	rule           reduce using rule 44
	then           reduce using rule 44
	else           reduce using rule 44
	'-->'          reduce using rule 44
	'||'           reduce using rule 44
	'&&'           reduce using rule 44
	'='            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'+'            reduce using rule 44
	'-'            reduce using rule 44
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 44
	')'            reduce using rule 44
	%eof           reduce using rule 44


State 102

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr '>' Expr .                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 42
	rule           reduce using rule 42
	then           reduce using rule 42
	else           reduce using rule 42
	'-->'          reduce using rule 42
	'||'           reduce using rule 42
	'&&'           reduce using rule 42
	'='            fail
	'<'            fail
	'>'            fail
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 42
	')'            reduce using rule 42
	%eof           reduce using rule 42


State 103

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr '<' Expr .                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 41
	rule           reduce using rule 41
	then           reduce using rule 41
	else           reduce using rule 41
	'-->'          reduce using rule 41
	'||'           reduce using rule 41
	'&&'           reduce using rule 41
	'='            fail
	'<'            fail
	'>'            fail
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 41
	')'            reduce using rule 41
	%eof           reduce using rule 41


State 104

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr '=' Expr .                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 43
	rule           reduce using rule 43
	then           reduce using rule 43
	else           reduce using rule 43
	'-->'          reduce using rule 43
	'||'           reduce using rule 43
	'&&'           reduce using rule 43
	'='            fail
	'<'            fail
	'>'            fail
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 43
	')'            reduce using rule 43
	%eof           reduce using rule 43


State 105

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr '&&' Expr .                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 38
	rule           reduce using rule 38
	then           reduce using rule 38
	else           reduce using rule 38
	'-->'          reduce using rule 38
	'||'           reduce using rule 38
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 38
	')'            reduce using rule 38
	%eof           reduce using rule 38


State 106

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr '||' Expr .                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 37
	rule           reduce using rule 37
	then           reduce using rule 37
	else           reduce using rule 37
	'-->'          reduce using rule 37
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 37
	')'            reduce using rule 37
	%eof           reduce using rule 37


State 107

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr '-->' Expr .                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 36
	rule           reduce using rule 36
	then           reduce using rule 36
	else           reduce using rule 36
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 36
	')'            reduce using rule 36
	%eof           reduce using rule 36


State 108

	Acc -> Acc '.' VAR .                                (rule 53)

	assert         reduce using rule 53
	rule           reduce using rule 53
	then           reduce using rule 53
	else           reduce using rule 53
	true           reduce using rule 53
	false          reduce using rule 53
	'-->'          reduce using rule 53
	'||'           reduce using rule 53
	'&&'           reduce using rule 53
	'='            reduce using rule 53
	'<'            reduce using rule 53
	'>'            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'*'            reduce using rule 53
	'/'            reduce using rule 53
	'%'            reduce using rule 53
	'.'            reduce using rule 53
	','            reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	NUM            reduce using rule 53
	VAR            reduce using rule 53
	%eof           reduce using rule 53


State 109

	Expr -> all VAR ':' . Tp '.' Expr                   (rule 34)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 130

State 110

	Expr -> ex VAR ':' . Tp '.' Expr                    (rule 35)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 129

State 111

	Expr -> if Expr then . Expr else Expr               (rule 39)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 128
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 112

	Pattern -> '(' VarsCommaSep . ')'                   (rule 29)
	VarsCommaSep -> VarsCommaSep . ',' VAR              (rule 32)

	','            shift, and enter state 126
	')'            shift, and enter state 127


State 113

	VarsCommaSep -> VAR .                               (rule 31)

	','            reduce using rule 31
	')'            reduce using rule 31


State 114

	Expr -> '\\' Pattern ':' . ATp '->' Expr            (rule 33)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 125

State 115

	ExprsCommaSep -> ExprsCommaSep ',' . Expr           (rule 62)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 124
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 116

	Atom -> '(' ExprsCommaSep ')' .                     (rule 55)

	assert         reduce using rule 55
	rule           reduce using rule 55
	then           reduce using rule 55
	else           reduce using rule 55
	true           reduce using rule 55
	false          reduce using rule 55
	'-->'          reduce using rule 55
	'||'           reduce using rule 55
	'&&'           reduce using rule 55
	'='            reduce using rule 55
	'<'            reduce using rule 55
	'>'            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'*'            reduce using rule 55
	'/'            reduce using rule 55
	'%'            reduce using rule 55
	'.'            reduce using rule 55
	','            reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	NUM            reduce using rule 55
	VAR            reduce using rule 55
	%eof           reduce using rule 55


State 117

	VarDeclsCommaSep -> VarDeclsCommaSep ',' VarDecl .    (rule 14)

	if             reduce using rule 14
	','            reduce using rule 14


State 118

	VarDecl -> VAR ':' Tp .                             (rule 15)
	Tp -> Tp . '->' Tp                                  (rule 27)

	if             reduce using rule 15
	'->'           shift, and enter state 93
	','            reduce using rule 15


State 119

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)
	RuleConcl -> then Expr .                            (rule 70)

	assert         reduce using rule 70
	rule           reduce using rule 70
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	%eof           reduce using rule 70


State 120

	FieldDecl -> VAR Annot . ':' Tp                     (rule 9)

	':'            shift, and enter state 123


State 121

	ClassDef -> extends VAR '{' FieldDecls . '}'        (rule 6)
	FieldDecls -> FieldDecls . FieldDecl                (rule 8)

	'}'            shift, and enter state 122
	VAR            shift, and enter state 61

	FieldDecl      goto state 59

State 122

	ClassDef -> extends VAR '{' FieldDecls '}' .        (rule 6)

	assert         reduce using rule 6
	class          reduce using rule 6
	decl           reduce using rule 6
	rule           reduce using rule 6
	%eof           reduce using rule 6


State 123

	FieldDecl -> VAR Annot ':' . Tp                     (rule 9)

	Bool           shift, and enter state 30
	Int            shift, and enter state 31
	'('            shift, and enter state 32
	VAR            shift, and enter state 33

	ATp            goto state 28
	Tp             goto state 137

State 124

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)
	ExprsCommaSep -> ExprsCommaSep ',' Expr .           (rule 62)

	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 62
	')'            reduce using rule 62


State 125

	Expr -> '\\' Pattern ':' ATp . '->' Expr            (rule 33)

	'->'           shift, and enter state 136


State 126

	VarsCommaSep -> VarsCommaSep ',' . VAR              (rule 32)

	VAR            shift, and enter state 135


State 127

	Pattern -> '(' VarsCommaSep ')' .                   (rule 29)

	':'            reduce using rule 29


State 128

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> if Expr then Expr . else Expr               (rule 39)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	else           shift, and enter state 134
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90


State 129

	Tp -> Tp . '->' Tp                                  (rule 27)
	Expr -> ex VAR ':' Tp . '.' Expr                    (rule 35)

	'->'           shift, and enter state 93
	'.'            shift, and enter state 133


State 130

	Tp -> Tp . '->' Tp                                  (rule 27)
	Expr -> all VAR ':' Tp . '.' Expr                   (rule 34)

	'->'           shift, and enter state 93
	'.'            shift, and enter state 132


State 131

	TpsCommaSep -> TpsCommaSep ',' Tp .                 (rule 25)
	Tp -> Tp . '->' Tp                                  (rule 27)

	'->'           shift, and enter state 93
	','            reduce using rule 25
	')'            reduce using rule 25


State 132

	Expr -> all VAR ':' Tp '.' . Expr                   (rule 34)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 141
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 133

	Expr -> ex VAR ':' Tp '.' . Expr                    (rule 35)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 140
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 134

	Expr -> if Expr then Expr else . Expr               (rule 39)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 139
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 135

	VarsCommaSep -> VarsCommaSep ',' VAR .              (rule 32)

	','            reduce using rule 32
	')'            reduce using rule 32


State 136

	Expr -> '\\' Pattern ':' ATp '->' . Expr            (rule 33)

	not            shift, and enter state 38
	all            shift, and enter state 39
	ex             shift, and enter state 40
	if             shift, and enter state 41
	true           shift, and enter state 42
	false          shift, and enter state 43
	'\\'           shift, and enter state 44
	'-'            shift, and enter state 45
	'('            shift, and enter state 46
	NUM            shift, and enter state 47
	VAR            shift, and enter state 48

	Expr           goto state 138
	App            goto state 35
	Acc            goto state 36
	Atom           goto state 37

State 137

	FieldDecl -> VAR Annot ':' Tp .                     (rule 9)
	Tp -> Tp . '->' Tp                                  (rule 27)

	'->'           shift, and enter state 93
	'}'            reduce using rule 9
	VAR            reduce using rule 9


State 138

	Expr -> '\\' Pattern ':' ATp '->' Expr .            (rule 33)
	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 33
	rule           reduce using rule 33
	then           reduce using rule 33
	else           reduce using rule 33
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 33
	')'            reduce using rule 33
	%eof           reduce using rule 33


State 139

	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> if Expr then Expr else Expr .               (rule 39)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 39
	rule           reduce using rule 39
	then           reduce using rule 39
	else           reduce using rule 39
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 39
	')'            reduce using rule 39
	%eof           reduce using rule 39


State 140

	Expr -> ex VAR ':' Tp '.' Expr .                    (rule 35)
	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 35
	rule           reduce using rule 35
	then           reduce using rule 35
	else           reduce using rule 35
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 35
	')'            reduce using rule 35
	%eof           reduce using rule 35


State 141

	Expr -> all VAR ':' Tp '.' Expr .                   (rule 34)
	Expr -> Expr . '-->' Expr                           (rule 36)
	Expr -> Expr . '||' Expr                            (rule 37)
	Expr -> Expr . '&&' Expr                            (rule 38)
	Expr -> Expr . '<' Expr                             (rule 41)
	Expr -> Expr . '>' Expr                             (rule 42)
	Expr -> Expr . '=' Expr                             (rule 43)
	Expr -> Expr . '+' Expr                             (rule 44)
	Expr -> Expr . '-' Expr                             (rule 45)
	Expr -> Expr . '*' Expr                             (rule 47)
	Expr -> Expr . '/' Expr                             (rule 48)
	Expr -> Expr . '%' Expr                             (rule 49)

	assert         reduce using rule 34
	rule           reduce using rule 34
	then           reduce using rule 34
	else           reduce using rule 34
	'-->'          shift, and enter state 80
	'||'           shift, and enter state 81
	'&&'           shift, and enter state 82
	'='            shift, and enter state 83
	'<'            shift, and enter state 84
	'>'            shift, and enter state 85
	'+'            shift, and enter state 86
	'-'            shift, and enter state 87
	'*'            shift, and enter state 88
	'/'            shift, and enter state 89
	'%'            shift, and enter state 90
	','            reduce using rule 34
	')'            reduce using rule 34
	%eof           reduce using rule 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 41
Number of non-terminals: 30
Number of states: 142
